
LTN_buoi1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000b1c  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000008  08000c4c  08000c4c  00010c4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000c54  08000c54  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08000c54  08000c54  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000c54  08000c54  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000c54  08000c54  00010c54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000c58  08000c58  00010c58  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08000c5c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08000cb8  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08000cb8  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020085  2**0
                  CONTENTS, READONLY
 13 .debug_info   000008de  00000000  00000000  000200c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002fc  00000000  00000000  000209a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000110  00000000  00000000  00020ca8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000b8  00000000  00000000  00020db8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002973  00000000  00000000  00020e70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000012a6  00000000  00000000  000237e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000096a7  00000000  00000000  00024a89  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000009a0  00000000  00000000  0002e130  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005f  00000000  00000000  0002ead0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	2000005c 	.word	0x2000005c
 800014c:	00000000 	.word	0x00000000
 8000150:	08000c34 	.word	0x08000c34

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000060 	.word	0x20000060
 800016c:	08000c34 	.word	0x08000c34

08000170 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0
	printf("hello\n");
 8000174:	4801      	ldr	r0, [pc, #4]	; (800017c <main+0xc>)
 8000176:	f000 f9d1 	bl	800051c <puts>
    /* Loop forever */
	for(;;);
 800017a:	e7fe      	b.n	800017a <main+0xa>
 800017c:	08000c4c 	.word	0x08000c4c

08000180 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000180:	b580      	push	{r7, lr}
 8000182:	b086      	sub	sp, #24
 8000184:	af00      	add	r7, sp, #0
 8000186:	60f8      	str	r0, [r7, #12]
 8000188:	60b9      	str	r1, [r7, #8]
 800018a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800018c:	2300      	movs	r3, #0
 800018e:	617b      	str	r3, [r7, #20]
 8000190:	e00a      	b.n	80001a8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000192:	f3af 8000 	nop.w
 8000196:	4601      	mov	r1, r0
 8000198:	68bb      	ldr	r3, [r7, #8]
 800019a:	1c5a      	adds	r2, r3, #1
 800019c:	60ba      	str	r2, [r7, #8]
 800019e:	b2ca      	uxtb	r2, r1
 80001a0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001a2:	697b      	ldr	r3, [r7, #20]
 80001a4:	3301      	adds	r3, #1
 80001a6:	617b      	str	r3, [r7, #20]
 80001a8:	697a      	ldr	r2, [r7, #20]
 80001aa:	687b      	ldr	r3, [r7, #4]
 80001ac:	429a      	cmp	r2, r3
 80001ae:	dbf0      	blt.n	8000192 <_read+0x12>
  }

  return len;
 80001b0:	687b      	ldr	r3, [r7, #4]
}
 80001b2:	4618      	mov	r0, r3
 80001b4:	3718      	adds	r7, #24
 80001b6:	46bd      	mov	sp, r7
 80001b8:	bd80      	pop	{r7, pc}

080001ba <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80001ba:	b580      	push	{r7, lr}
 80001bc:	b086      	sub	sp, #24
 80001be:	af00      	add	r7, sp, #0
 80001c0:	60f8      	str	r0, [r7, #12]
 80001c2:	60b9      	str	r1, [r7, #8]
 80001c4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001c6:	2300      	movs	r3, #0
 80001c8:	617b      	str	r3, [r7, #20]
 80001ca:	e009      	b.n	80001e0 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80001cc:	68bb      	ldr	r3, [r7, #8]
 80001ce:	1c5a      	adds	r2, r3, #1
 80001d0:	60ba      	str	r2, [r7, #8]
 80001d2:	781b      	ldrb	r3, [r3, #0]
 80001d4:	4618      	mov	r0, r3
 80001d6:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001da:	697b      	ldr	r3, [r7, #20]
 80001dc:	3301      	adds	r3, #1
 80001de:	617b      	str	r3, [r7, #20]
 80001e0:	697a      	ldr	r2, [r7, #20]
 80001e2:	687b      	ldr	r3, [r7, #4]
 80001e4:	429a      	cmp	r2, r3
 80001e6:	dbf1      	blt.n	80001cc <_write+0x12>
  }
  return len;
 80001e8:	687b      	ldr	r3, [r7, #4]
}
 80001ea:	4618      	mov	r0, r3
 80001ec:	3718      	adds	r7, #24
 80001ee:	46bd      	mov	sp, r7
 80001f0:	bd80      	pop	{r7, pc}

080001f2 <_close>:

int _close(int file)
{
 80001f2:	b480      	push	{r7}
 80001f4:	b083      	sub	sp, #12
 80001f6:	af00      	add	r7, sp, #0
 80001f8:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80001fa:	f04f 33ff 	mov.w	r3, #4294967295
}
 80001fe:	4618      	mov	r0, r3
 8000200:	370c      	adds	r7, #12
 8000202:	46bd      	mov	sp, r7
 8000204:	bc80      	pop	{r7}
 8000206:	4770      	bx	lr

08000208 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000208:	b480      	push	{r7}
 800020a:	b083      	sub	sp, #12
 800020c:	af00      	add	r7, sp, #0
 800020e:	6078      	str	r0, [r7, #4]
 8000210:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000212:	683b      	ldr	r3, [r7, #0]
 8000214:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000218:	605a      	str	r2, [r3, #4]
  return 0;
 800021a:	2300      	movs	r3, #0
}
 800021c:	4618      	mov	r0, r3
 800021e:	370c      	adds	r7, #12
 8000220:	46bd      	mov	sp, r7
 8000222:	bc80      	pop	{r7}
 8000224:	4770      	bx	lr

08000226 <_isatty>:

int _isatty(int file)
{
 8000226:	b480      	push	{r7}
 8000228:	b083      	sub	sp, #12
 800022a:	af00      	add	r7, sp, #0
 800022c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800022e:	2301      	movs	r3, #1
}
 8000230:	4618      	mov	r0, r3
 8000232:	370c      	adds	r7, #12
 8000234:	46bd      	mov	sp, r7
 8000236:	bc80      	pop	{r7}
 8000238:	4770      	bx	lr

0800023a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800023a:	b480      	push	{r7}
 800023c:	b085      	sub	sp, #20
 800023e:	af00      	add	r7, sp, #0
 8000240:	60f8      	str	r0, [r7, #12]
 8000242:	60b9      	str	r1, [r7, #8]
 8000244:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000246:	2300      	movs	r3, #0
}
 8000248:	4618      	mov	r0, r3
 800024a:	3714      	adds	r7, #20
 800024c:	46bd      	mov	sp, r7
 800024e:	bc80      	pop	{r7}
 8000250:	4770      	bx	lr
	...

08000254 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000254:	b580      	push	{r7, lr}
 8000256:	b086      	sub	sp, #24
 8000258:	af00      	add	r7, sp, #0
 800025a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800025c:	4a14      	ldr	r2, [pc, #80]	; (80002b0 <_sbrk+0x5c>)
 800025e:	4b15      	ldr	r3, [pc, #84]	; (80002b4 <_sbrk+0x60>)
 8000260:	1ad3      	subs	r3, r2, r3
 8000262:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000264:	697b      	ldr	r3, [r7, #20]
 8000266:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000268:	4b13      	ldr	r3, [pc, #76]	; (80002b8 <_sbrk+0x64>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	2b00      	cmp	r3, #0
 800026e:	d102      	bne.n	8000276 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000270:	4b11      	ldr	r3, [pc, #68]	; (80002b8 <_sbrk+0x64>)
 8000272:	4a12      	ldr	r2, [pc, #72]	; (80002bc <_sbrk+0x68>)
 8000274:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000276:	4b10      	ldr	r3, [pc, #64]	; (80002b8 <_sbrk+0x64>)
 8000278:	681a      	ldr	r2, [r3, #0]
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	4413      	add	r3, r2
 800027e:	693a      	ldr	r2, [r7, #16]
 8000280:	429a      	cmp	r2, r3
 8000282:	d207      	bcs.n	8000294 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000284:	f000 fa78 	bl	8000778 <__errno>
 8000288:	4603      	mov	r3, r0
 800028a:	220c      	movs	r2, #12
 800028c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800028e:	f04f 33ff 	mov.w	r3, #4294967295
 8000292:	e009      	b.n	80002a8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000294:	4b08      	ldr	r3, [pc, #32]	; (80002b8 <_sbrk+0x64>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800029a:	4b07      	ldr	r3, [pc, #28]	; (80002b8 <_sbrk+0x64>)
 800029c:	681a      	ldr	r2, [r3, #0]
 800029e:	687b      	ldr	r3, [r7, #4]
 80002a0:	4413      	add	r3, r2
 80002a2:	4a05      	ldr	r2, [pc, #20]	; (80002b8 <_sbrk+0x64>)
 80002a4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80002a6:	68fb      	ldr	r3, [r7, #12]
}
 80002a8:	4618      	mov	r0, r3
 80002aa:	3718      	adds	r7, #24
 80002ac:	46bd      	mov	sp, r7
 80002ae:	bd80      	pop	{r7, pc}
 80002b0:	20005000 	.word	0x20005000
 80002b4:	00000400 	.word	0x00000400
 80002b8:	20000078 	.word	0x20000078
 80002bc:	200001c8 	.word	0x200001c8

080002c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c0:	480d      	ldr	r0, [pc, #52]	; (80002f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002c2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002c4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002c8:	480c      	ldr	r0, [pc, #48]	; (80002fc <LoopForever+0x6>)
  ldr r1, =_edata
 80002ca:	490d      	ldr	r1, [pc, #52]	; (8000300 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002cc:	4a0d      	ldr	r2, [pc, #52]	; (8000304 <LoopForever+0xe>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d0:	e002      	b.n	80002d8 <LoopCopyDataInit>

080002d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002d6:	3304      	adds	r3, #4

080002d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002dc:	d3f9      	bcc.n	80002d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002de:	4a0a      	ldr	r2, [pc, #40]	; (8000308 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e0:	4c0a      	ldr	r4, [pc, #40]	; (800030c <LoopForever+0x16>)
  movs r3, #0
 80002e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e4:	e001      	b.n	80002ea <LoopFillZerobss>

080002e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e8:	3204      	adds	r2, #4

080002ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002ec:	d3fb      	bcc.n	80002e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ee:	f000 fa49 	bl	8000784 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002f2:	f7ff ff3d 	bl	8000170 <main>

080002f6 <LoopForever>:

LoopForever:
  b LoopForever
 80002f6:	e7fe      	b.n	80002f6 <LoopForever>
  ldr   r0, =_estack
 80002f8:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80002fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000300:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000304:	08000c5c 	.word	0x08000c5c
  ldr r2, =_sbss
 8000308:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 800030c:	200001c8 	.word	0x200001c8

08000310 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000310:	e7fe      	b.n	8000310 <ADC1_2_IRQHandler>
	...

08000314 <std>:
 8000314:	2300      	movs	r3, #0
 8000316:	b510      	push	{r4, lr}
 8000318:	4604      	mov	r4, r0
 800031a:	e9c0 3300 	strd	r3, r3, [r0]
 800031e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000322:	6083      	str	r3, [r0, #8]
 8000324:	8181      	strh	r1, [r0, #12]
 8000326:	6643      	str	r3, [r0, #100]	; 0x64
 8000328:	81c2      	strh	r2, [r0, #14]
 800032a:	6183      	str	r3, [r0, #24]
 800032c:	4619      	mov	r1, r3
 800032e:	2208      	movs	r2, #8
 8000330:	305c      	adds	r0, #92	; 0x5c
 8000332:	f000 f9d3 	bl	80006dc <memset>
 8000336:	4b05      	ldr	r3, [pc, #20]	; (800034c <std+0x38>)
 8000338:	6224      	str	r4, [r4, #32]
 800033a:	6263      	str	r3, [r4, #36]	; 0x24
 800033c:	4b04      	ldr	r3, [pc, #16]	; (8000350 <std+0x3c>)
 800033e:	62a3      	str	r3, [r4, #40]	; 0x28
 8000340:	4b04      	ldr	r3, [pc, #16]	; (8000354 <std+0x40>)
 8000342:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000344:	4b04      	ldr	r3, [pc, #16]	; (8000358 <std+0x44>)
 8000346:	6323      	str	r3, [r4, #48]	; 0x30
 8000348:	bd10      	pop	{r4, pc}
 800034a:	bf00      	nop
 800034c:	0800052d 	.word	0x0800052d
 8000350:	0800054f 	.word	0x0800054f
 8000354:	08000587 	.word	0x08000587
 8000358:	080005ab 	.word	0x080005ab

0800035c <stdio_exit_handler>:
 800035c:	4a02      	ldr	r2, [pc, #8]	; (8000368 <stdio_exit_handler+0xc>)
 800035e:	4903      	ldr	r1, [pc, #12]	; (800036c <stdio_exit_handler+0x10>)
 8000360:	4803      	ldr	r0, [pc, #12]	; (8000370 <stdio_exit_handler+0x14>)
 8000362:	f000 b869 	b.w	8000438 <_fwalk_sglue>
 8000366:	bf00      	nop
 8000368:	20000000 	.word	0x20000000
 800036c:	08000abd 	.word	0x08000abd
 8000370:	2000000c 	.word	0x2000000c

08000374 <cleanup_stdio>:
 8000374:	6841      	ldr	r1, [r0, #4]
 8000376:	4b0c      	ldr	r3, [pc, #48]	; (80003a8 <cleanup_stdio+0x34>)
 8000378:	b510      	push	{r4, lr}
 800037a:	4299      	cmp	r1, r3
 800037c:	4604      	mov	r4, r0
 800037e:	d001      	beq.n	8000384 <cleanup_stdio+0x10>
 8000380:	f000 fb9c 	bl	8000abc <_fflush_r>
 8000384:	68a1      	ldr	r1, [r4, #8]
 8000386:	4b09      	ldr	r3, [pc, #36]	; (80003ac <cleanup_stdio+0x38>)
 8000388:	4299      	cmp	r1, r3
 800038a:	d002      	beq.n	8000392 <cleanup_stdio+0x1e>
 800038c:	4620      	mov	r0, r4
 800038e:	f000 fb95 	bl	8000abc <_fflush_r>
 8000392:	68e1      	ldr	r1, [r4, #12]
 8000394:	4b06      	ldr	r3, [pc, #24]	; (80003b0 <cleanup_stdio+0x3c>)
 8000396:	4299      	cmp	r1, r3
 8000398:	d004      	beq.n	80003a4 <cleanup_stdio+0x30>
 800039a:	4620      	mov	r0, r4
 800039c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80003a0:	f000 bb8c 	b.w	8000abc <_fflush_r>
 80003a4:	bd10      	pop	{r4, pc}
 80003a6:	bf00      	nop
 80003a8:	2000007c 	.word	0x2000007c
 80003ac:	200000e4 	.word	0x200000e4
 80003b0:	2000014c 	.word	0x2000014c

080003b4 <global_stdio_init.part.0>:
 80003b4:	b510      	push	{r4, lr}
 80003b6:	4b0b      	ldr	r3, [pc, #44]	; (80003e4 <global_stdio_init.part.0+0x30>)
 80003b8:	4c0b      	ldr	r4, [pc, #44]	; (80003e8 <global_stdio_init.part.0+0x34>)
 80003ba:	4a0c      	ldr	r2, [pc, #48]	; (80003ec <global_stdio_init.part.0+0x38>)
 80003bc:	4620      	mov	r0, r4
 80003be:	601a      	str	r2, [r3, #0]
 80003c0:	2104      	movs	r1, #4
 80003c2:	2200      	movs	r2, #0
 80003c4:	f7ff ffa6 	bl	8000314 <std>
 80003c8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80003cc:	2201      	movs	r2, #1
 80003ce:	2109      	movs	r1, #9
 80003d0:	f7ff ffa0 	bl	8000314 <std>
 80003d4:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80003d8:	2202      	movs	r2, #2
 80003da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80003de:	2112      	movs	r1, #18
 80003e0:	f7ff bf98 	b.w	8000314 <std>
 80003e4:	200001b4 	.word	0x200001b4
 80003e8:	2000007c 	.word	0x2000007c
 80003ec:	0800035d 	.word	0x0800035d

080003f0 <__sfp_lock_acquire>:
 80003f0:	4801      	ldr	r0, [pc, #4]	; (80003f8 <__sfp_lock_acquire+0x8>)
 80003f2:	f000 b9eb 	b.w	80007cc <__retarget_lock_acquire_recursive>
 80003f6:	bf00      	nop
 80003f8:	200001bd 	.word	0x200001bd

080003fc <__sfp_lock_release>:
 80003fc:	4801      	ldr	r0, [pc, #4]	; (8000404 <__sfp_lock_release+0x8>)
 80003fe:	f000 b9e6 	b.w	80007ce <__retarget_lock_release_recursive>
 8000402:	bf00      	nop
 8000404:	200001bd 	.word	0x200001bd

08000408 <__sinit>:
 8000408:	b510      	push	{r4, lr}
 800040a:	4604      	mov	r4, r0
 800040c:	f7ff fff0 	bl	80003f0 <__sfp_lock_acquire>
 8000410:	6a23      	ldr	r3, [r4, #32]
 8000412:	b11b      	cbz	r3, 800041c <__sinit+0x14>
 8000414:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000418:	f7ff bff0 	b.w	80003fc <__sfp_lock_release>
 800041c:	4b04      	ldr	r3, [pc, #16]	; (8000430 <__sinit+0x28>)
 800041e:	6223      	str	r3, [r4, #32]
 8000420:	4b04      	ldr	r3, [pc, #16]	; (8000434 <__sinit+0x2c>)
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	2b00      	cmp	r3, #0
 8000426:	d1f5      	bne.n	8000414 <__sinit+0xc>
 8000428:	f7ff ffc4 	bl	80003b4 <global_stdio_init.part.0>
 800042c:	e7f2      	b.n	8000414 <__sinit+0xc>
 800042e:	bf00      	nop
 8000430:	08000375 	.word	0x08000375
 8000434:	200001b4 	.word	0x200001b4

08000438 <_fwalk_sglue>:
 8000438:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800043c:	4607      	mov	r7, r0
 800043e:	4688      	mov	r8, r1
 8000440:	4614      	mov	r4, r2
 8000442:	2600      	movs	r6, #0
 8000444:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000448:	f1b9 0901 	subs.w	r9, r9, #1
 800044c:	d505      	bpl.n	800045a <_fwalk_sglue+0x22>
 800044e:	6824      	ldr	r4, [r4, #0]
 8000450:	2c00      	cmp	r4, #0
 8000452:	d1f7      	bne.n	8000444 <_fwalk_sglue+0xc>
 8000454:	4630      	mov	r0, r6
 8000456:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800045a:	89ab      	ldrh	r3, [r5, #12]
 800045c:	2b01      	cmp	r3, #1
 800045e:	d907      	bls.n	8000470 <_fwalk_sglue+0x38>
 8000460:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000464:	3301      	adds	r3, #1
 8000466:	d003      	beq.n	8000470 <_fwalk_sglue+0x38>
 8000468:	4629      	mov	r1, r5
 800046a:	4638      	mov	r0, r7
 800046c:	47c0      	blx	r8
 800046e:	4306      	orrs	r6, r0
 8000470:	3568      	adds	r5, #104	; 0x68
 8000472:	e7e9      	b.n	8000448 <_fwalk_sglue+0x10>

08000474 <_puts_r>:
 8000474:	6a03      	ldr	r3, [r0, #32]
 8000476:	b570      	push	{r4, r5, r6, lr}
 8000478:	4605      	mov	r5, r0
 800047a:	460e      	mov	r6, r1
 800047c:	6884      	ldr	r4, [r0, #8]
 800047e:	b90b      	cbnz	r3, 8000484 <_puts_r+0x10>
 8000480:	f7ff ffc2 	bl	8000408 <__sinit>
 8000484:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000486:	07db      	lsls	r3, r3, #31
 8000488:	d405      	bmi.n	8000496 <_puts_r+0x22>
 800048a:	89a3      	ldrh	r3, [r4, #12]
 800048c:	0598      	lsls	r0, r3, #22
 800048e:	d402      	bmi.n	8000496 <_puts_r+0x22>
 8000490:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000492:	f000 f99b 	bl	80007cc <__retarget_lock_acquire_recursive>
 8000496:	89a3      	ldrh	r3, [r4, #12]
 8000498:	0719      	lsls	r1, r3, #28
 800049a:	d513      	bpl.n	80004c4 <_puts_r+0x50>
 800049c:	6923      	ldr	r3, [r4, #16]
 800049e:	b18b      	cbz	r3, 80004c4 <_puts_r+0x50>
 80004a0:	3e01      	subs	r6, #1
 80004a2:	68a3      	ldr	r3, [r4, #8]
 80004a4:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80004a8:	3b01      	subs	r3, #1
 80004aa:	60a3      	str	r3, [r4, #8]
 80004ac:	b9e9      	cbnz	r1, 80004ea <_puts_r+0x76>
 80004ae:	2b00      	cmp	r3, #0
 80004b0:	da2e      	bge.n	8000510 <_puts_r+0x9c>
 80004b2:	4622      	mov	r2, r4
 80004b4:	210a      	movs	r1, #10
 80004b6:	4628      	mov	r0, r5
 80004b8:	f000 f87b 	bl	80005b2 <__swbuf_r>
 80004bc:	3001      	adds	r0, #1
 80004be:	d007      	beq.n	80004d0 <_puts_r+0x5c>
 80004c0:	250a      	movs	r5, #10
 80004c2:	e007      	b.n	80004d4 <_puts_r+0x60>
 80004c4:	4621      	mov	r1, r4
 80004c6:	4628      	mov	r0, r5
 80004c8:	f000 f8b0 	bl	800062c <__swsetup_r>
 80004cc:	2800      	cmp	r0, #0
 80004ce:	d0e7      	beq.n	80004a0 <_puts_r+0x2c>
 80004d0:	f04f 35ff 	mov.w	r5, #4294967295
 80004d4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80004d6:	07da      	lsls	r2, r3, #31
 80004d8:	d405      	bmi.n	80004e6 <_puts_r+0x72>
 80004da:	89a3      	ldrh	r3, [r4, #12]
 80004dc:	059b      	lsls	r3, r3, #22
 80004de:	d402      	bmi.n	80004e6 <_puts_r+0x72>
 80004e0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80004e2:	f000 f974 	bl	80007ce <__retarget_lock_release_recursive>
 80004e6:	4628      	mov	r0, r5
 80004e8:	bd70      	pop	{r4, r5, r6, pc}
 80004ea:	2b00      	cmp	r3, #0
 80004ec:	da04      	bge.n	80004f8 <_puts_r+0x84>
 80004ee:	69a2      	ldr	r2, [r4, #24]
 80004f0:	429a      	cmp	r2, r3
 80004f2:	dc06      	bgt.n	8000502 <_puts_r+0x8e>
 80004f4:	290a      	cmp	r1, #10
 80004f6:	d004      	beq.n	8000502 <_puts_r+0x8e>
 80004f8:	6823      	ldr	r3, [r4, #0]
 80004fa:	1c5a      	adds	r2, r3, #1
 80004fc:	6022      	str	r2, [r4, #0]
 80004fe:	7019      	strb	r1, [r3, #0]
 8000500:	e7cf      	b.n	80004a2 <_puts_r+0x2e>
 8000502:	4622      	mov	r2, r4
 8000504:	4628      	mov	r0, r5
 8000506:	f000 f854 	bl	80005b2 <__swbuf_r>
 800050a:	3001      	adds	r0, #1
 800050c:	d1c9      	bne.n	80004a2 <_puts_r+0x2e>
 800050e:	e7df      	b.n	80004d0 <_puts_r+0x5c>
 8000510:	250a      	movs	r5, #10
 8000512:	6823      	ldr	r3, [r4, #0]
 8000514:	1c5a      	adds	r2, r3, #1
 8000516:	6022      	str	r2, [r4, #0]
 8000518:	701d      	strb	r5, [r3, #0]
 800051a:	e7db      	b.n	80004d4 <_puts_r+0x60>

0800051c <puts>:
 800051c:	4b02      	ldr	r3, [pc, #8]	; (8000528 <puts+0xc>)
 800051e:	4601      	mov	r1, r0
 8000520:	6818      	ldr	r0, [r3, #0]
 8000522:	f7ff bfa7 	b.w	8000474 <_puts_r>
 8000526:	bf00      	nop
 8000528:	20000058 	.word	0x20000058

0800052c <__sread>:
 800052c:	b510      	push	{r4, lr}
 800052e:	460c      	mov	r4, r1
 8000530:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000534:	f000 f8fc 	bl	8000730 <_read_r>
 8000538:	2800      	cmp	r0, #0
 800053a:	bfab      	itete	ge
 800053c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800053e:	89a3      	ldrhlt	r3, [r4, #12]
 8000540:	181b      	addge	r3, r3, r0
 8000542:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000546:	bfac      	ite	ge
 8000548:	6563      	strge	r3, [r4, #84]	; 0x54
 800054a:	81a3      	strhlt	r3, [r4, #12]
 800054c:	bd10      	pop	{r4, pc}

0800054e <__swrite>:
 800054e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000552:	461f      	mov	r7, r3
 8000554:	898b      	ldrh	r3, [r1, #12]
 8000556:	4605      	mov	r5, r0
 8000558:	05db      	lsls	r3, r3, #23
 800055a:	460c      	mov	r4, r1
 800055c:	4616      	mov	r6, r2
 800055e:	d505      	bpl.n	800056c <__swrite+0x1e>
 8000560:	2302      	movs	r3, #2
 8000562:	2200      	movs	r2, #0
 8000564:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000568:	f000 f8d0 	bl	800070c <_lseek_r>
 800056c:	89a3      	ldrh	r3, [r4, #12]
 800056e:	4632      	mov	r2, r6
 8000570:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000574:	81a3      	strh	r3, [r4, #12]
 8000576:	4628      	mov	r0, r5
 8000578:	463b      	mov	r3, r7
 800057a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800057e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000582:	f000 b8e7 	b.w	8000754 <_write_r>

08000586 <__sseek>:
 8000586:	b510      	push	{r4, lr}
 8000588:	460c      	mov	r4, r1
 800058a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800058e:	f000 f8bd 	bl	800070c <_lseek_r>
 8000592:	1c43      	adds	r3, r0, #1
 8000594:	89a3      	ldrh	r3, [r4, #12]
 8000596:	bf15      	itete	ne
 8000598:	6560      	strne	r0, [r4, #84]	; 0x54
 800059a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800059e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80005a2:	81a3      	strheq	r3, [r4, #12]
 80005a4:	bf18      	it	ne
 80005a6:	81a3      	strhne	r3, [r4, #12]
 80005a8:	bd10      	pop	{r4, pc}

080005aa <__sclose>:
 80005aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005ae:	f000 b89d 	b.w	80006ec <_close_r>

080005b2 <__swbuf_r>:
 80005b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005b4:	460e      	mov	r6, r1
 80005b6:	4614      	mov	r4, r2
 80005b8:	4605      	mov	r5, r0
 80005ba:	b118      	cbz	r0, 80005c4 <__swbuf_r+0x12>
 80005bc:	6a03      	ldr	r3, [r0, #32]
 80005be:	b90b      	cbnz	r3, 80005c4 <__swbuf_r+0x12>
 80005c0:	f7ff ff22 	bl	8000408 <__sinit>
 80005c4:	69a3      	ldr	r3, [r4, #24]
 80005c6:	60a3      	str	r3, [r4, #8]
 80005c8:	89a3      	ldrh	r3, [r4, #12]
 80005ca:	071a      	lsls	r2, r3, #28
 80005cc:	d525      	bpl.n	800061a <__swbuf_r+0x68>
 80005ce:	6923      	ldr	r3, [r4, #16]
 80005d0:	b31b      	cbz	r3, 800061a <__swbuf_r+0x68>
 80005d2:	6823      	ldr	r3, [r4, #0]
 80005d4:	6922      	ldr	r2, [r4, #16]
 80005d6:	b2f6      	uxtb	r6, r6
 80005d8:	1a98      	subs	r0, r3, r2
 80005da:	6963      	ldr	r3, [r4, #20]
 80005dc:	4637      	mov	r7, r6
 80005de:	4283      	cmp	r3, r0
 80005e0:	dc04      	bgt.n	80005ec <__swbuf_r+0x3a>
 80005e2:	4621      	mov	r1, r4
 80005e4:	4628      	mov	r0, r5
 80005e6:	f000 fa69 	bl	8000abc <_fflush_r>
 80005ea:	b9e0      	cbnz	r0, 8000626 <__swbuf_r+0x74>
 80005ec:	68a3      	ldr	r3, [r4, #8]
 80005ee:	3b01      	subs	r3, #1
 80005f0:	60a3      	str	r3, [r4, #8]
 80005f2:	6823      	ldr	r3, [r4, #0]
 80005f4:	1c5a      	adds	r2, r3, #1
 80005f6:	6022      	str	r2, [r4, #0]
 80005f8:	701e      	strb	r6, [r3, #0]
 80005fa:	6962      	ldr	r2, [r4, #20]
 80005fc:	1c43      	adds	r3, r0, #1
 80005fe:	429a      	cmp	r2, r3
 8000600:	d004      	beq.n	800060c <__swbuf_r+0x5a>
 8000602:	89a3      	ldrh	r3, [r4, #12]
 8000604:	07db      	lsls	r3, r3, #31
 8000606:	d506      	bpl.n	8000616 <__swbuf_r+0x64>
 8000608:	2e0a      	cmp	r6, #10
 800060a:	d104      	bne.n	8000616 <__swbuf_r+0x64>
 800060c:	4621      	mov	r1, r4
 800060e:	4628      	mov	r0, r5
 8000610:	f000 fa54 	bl	8000abc <_fflush_r>
 8000614:	b938      	cbnz	r0, 8000626 <__swbuf_r+0x74>
 8000616:	4638      	mov	r0, r7
 8000618:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800061a:	4621      	mov	r1, r4
 800061c:	4628      	mov	r0, r5
 800061e:	f000 f805 	bl	800062c <__swsetup_r>
 8000622:	2800      	cmp	r0, #0
 8000624:	d0d5      	beq.n	80005d2 <__swbuf_r+0x20>
 8000626:	f04f 37ff 	mov.w	r7, #4294967295
 800062a:	e7f4      	b.n	8000616 <__swbuf_r+0x64>

0800062c <__swsetup_r>:
 800062c:	b538      	push	{r3, r4, r5, lr}
 800062e:	4b2a      	ldr	r3, [pc, #168]	; (80006d8 <__swsetup_r+0xac>)
 8000630:	4605      	mov	r5, r0
 8000632:	6818      	ldr	r0, [r3, #0]
 8000634:	460c      	mov	r4, r1
 8000636:	b118      	cbz	r0, 8000640 <__swsetup_r+0x14>
 8000638:	6a03      	ldr	r3, [r0, #32]
 800063a:	b90b      	cbnz	r3, 8000640 <__swsetup_r+0x14>
 800063c:	f7ff fee4 	bl	8000408 <__sinit>
 8000640:	89a3      	ldrh	r3, [r4, #12]
 8000642:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000646:	0718      	lsls	r0, r3, #28
 8000648:	d422      	bmi.n	8000690 <__swsetup_r+0x64>
 800064a:	06d9      	lsls	r1, r3, #27
 800064c:	d407      	bmi.n	800065e <__swsetup_r+0x32>
 800064e:	2309      	movs	r3, #9
 8000650:	602b      	str	r3, [r5, #0]
 8000652:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000656:	f04f 30ff 	mov.w	r0, #4294967295
 800065a:	81a3      	strh	r3, [r4, #12]
 800065c:	e034      	b.n	80006c8 <__swsetup_r+0x9c>
 800065e:	0758      	lsls	r0, r3, #29
 8000660:	d512      	bpl.n	8000688 <__swsetup_r+0x5c>
 8000662:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000664:	b141      	cbz	r1, 8000678 <__swsetup_r+0x4c>
 8000666:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800066a:	4299      	cmp	r1, r3
 800066c:	d002      	beq.n	8000674 <__swsetup_r+0x48>
 800066e:	4628      	mov	r0, r5
 8000670:	f000 f8ae 	bl	80007d0 <_free_r>
 8000674:	2300      	movs	r3, #0
 8000676:	6363      	str	r3, [r4, #52]	; 0x34
 8000678:	89a3      	ldrh	r3, [r4, #12]
 800067a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800067e:	81a3      	strh	r3, [r4, #12]
 8000680:	2300      	movs	r3, #0
 8000682:	6063      	str	r3, [r4, #4]
 8000684:	6923      	ldr	r3, [r4, #16]
 8000686:	6023      	str	r3, [r4, #0]
 8000688:	89a3      	ldrh	r3, [r4, #12]
 800068a:	f043 0308 	orr.w	r3, r3, #8
 800068e:	81a3      	strh	r3, [r4, #12]
 8000690:	6923      	ldr	r3, [r4, #16]
 8000692:	b94b      	cbnz	r3, 80006a8 <__swsetup_r+0x7c>
 8000694:	89a3      	ldrh	r3, [r4, #12]
 8000696:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800069a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800069e:	d003      	beq.n	80006a8 <__swsetup_r+0x7c>
 80006a0:	4621      	mov	r1, r4
 80006a2:	4628      	mov	r0, r5
 80006a4:	f000 fa57 	bl	8000b56 <__smakebuf_r>
 80006a8:	89a0      	ldrh	r0, [r4, #12]
 80006aa:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80006ae:	f010 0301 	ands.w	r3, r0, #1
 80006b2:	d00a      	beq.n	80006ca <__swsetup_r+0x9e>
 80006b4:	2300      	movs	r3, #0
 80006b6:	60a3      	str	r3, [r4, #8]
 80006b8:	6963      	ldr	r3, [r4, #20]
 80006ba:	425b      	negs	r3, r3
 80006bc:	61a3      	str	r3, [r4, #24]
 80006be:	6923      	ldr	r3, [r4, #16]
 80006c0:	b943      	cbnz	r3, 80006d4 <__swsetup_r+0xa8>
 80006c2:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80006c6:	d1c4      	bne.n	8000652 <__swsetup_r+0x26>
 80006c8:	bd38      	pop	{r3, r4, r5, pc}
 80006ca:	0781      	lsls	r1, r0, #30
 80006cc:	bf58      	it	pl
 80006ce:	6963      	ldrpl	r3, [r4, #20]
 80006d0:	60a3      	str	r3, [r4, #8]
 80006d2:	e7f4      	b.n	80006be <__swsetup_r+0x92>
 80006d4:	2000      	movs	r0, #0
 80006d6:	e7f7      	b.n	80006c8 <__swsetup_r+0x9c>
 80006d8:	20000058 	.word	0x20000058

080006dc <memset>:
 80006dc:	4603      	mov	r3, r0
 80006de:	4402      	add	r2, r0
 80006e0:	4293      	cmp	r3, r2
 80006e2:	d100      	bne.n	80006e6 <memset+0xa>
 80006e4:	4770      	bx	lr
 80006e6:	f803 1b01 	strb.w	r1, [r3], #1
 80006ea:	e7f9      	b.n	80006e0 <memset+0x4>

080006ec <_close_r>:
 80006ec:	b538      	push	{r3, r4, r5, lr}
 80006ee:	2300      	movs	r3, #0
 80006f0:	4d05      	ldr	r5, [pc, #20]	; (8000708 <_close_r+0x1c>)
 80006f2:	4604      	mov	r4, r0
 80006f4:	4608      	mov	r0, r1
 80006f6:	602b      	str	r3, [r5, #0]
 80006f8:	f7ff fd7b 	bl	80001f2 <_close>
 80006fc:	1c43      	adds	r3, r0, #1
 80006fe:	d102      	bne.n	8000706 <_close_r+0x1a>
 8000700:	682b      	ldr	r3, [r5, #0]
 8000702:	b103      	cbz	r3, 8000706 <_close_r+0x1a>
 8000704:	6023      	str	r3, [r4, #0]
 8000706:	bd38      	pop	{r3, r4, r5, pc}
 8000708:	200001b8 	.word	0x200001b8

0800070c <_lseek_r>:
 800070c:	b538      	push	{r3, r4, r5, lr}
 800070e:	4604      	mov	r4, r0
 8000710:	4608      	mov	r0, r1
 8000712:	4611      	mov	r1, r2
 8000714:	2200      	movs	r2, #0
 8000716:	4d05      	ldr	r5, [pc, #20]	; (800072c <_lseek_r+0x20>)
 8000718:	602a      	str	r2, [r5, #0]
 800071a:	461a      	mov	r2, r3
 800071c:	f7ff fd8d 	bl	800023a <_lseek>
 8000720:	1c43      	adds	r3, r0, #1
 8000722:	d102      	bne.n	800072a <_lseek_r+0x1e>
 8000724:	682b      	ldr	r3, [r5, #0]
 8000726:	b103      	cbz	r3, 800072a <_lseek_r+0x1e>
 8000728:	6023      	str	r3, [r4, #0]
 800072a:	bd38      	pop	{r3, r4, r5, pc}
 800072c:	200001b8 	.word	0x200001b8

08000730 <_read_r>:
 8000730:	b538      	push	{r3, r4, r5, lr}
 8000732:	4604      	mov	r4, r0
 8000734:	4608      	mov	r0, r1
 8000736:	4611      	mov	r1, r2
 8000738:	2200      	movs	r2, #0
 800073a:	4d05      	ldr	r5, [pc, #20]	; (8000750 <_read_r+0x20>)
 800073c:	602a      	str	r2, [r5, #0]
 800073e:	461a      	mov	r2, r3
 8000740:	f7ff fd1e 	bl	8000180 <_read>
 8000744:	1c43      	adds	r3, r0, #1
 8000746:	d102      	bne.n	800074e <_read_r+0x1e>
 8000748:	682b      	ldr	r3, [r5, #0]
 800074a:	b103      	cbz	r3, 800074e <_read_r+0x1e>
 800074c:	6023      	str	r3, [r4, #0]
 800074e:	bd38      	pop	{r3, r4, r5, pc}
 8000750:	200001b8 	.word	0x200001b8

08000754 <_write_r>:
 8000754:	b538      	push	{r3, r4, r5, lr}
 8000756:	4604      	mov	r4, r0
 8000758:	4608      	mov	r0, r1
 800075a:	4611      	mov	r1, r2
 800075c:	2200      	movs	r2, #0
 800075e:	4d05      	ldr	r5, [pc, #20]	; (8000774 <_write_r+0x20>)
 8000760:	602a      	str	r2, [r5, #0]
 8000762:	461a      	mov	r2, r3
 8000764:	f7ff fd29 	bl	80001ba <_write>
 8000768:	1c43      	adds	r3, r0, #1
 800076a:	d102      	bne.n	8000772 <_write_r+0x1e>
 800076c:	682b      	ldr	r3, [r5, #0]
 800076e:	b103      	cbz	r3, 8000772 <_write_r+0x1e>
 8000770:	6023      	str	r3, [r4, #0]
 8000772:	bd38      	pop	{r3, r4, r5, pc}
 8000774:	200001b8 	.word	0x200001b8

08000778 <__errno>:
 8000778:	4b01      	ldr	r3, [pc, #4]	; (8000780 <__errno+0x8>)
 800077a:	6818      	ldr	r0, [r3, #0]
 800077c:	4770      	bx	lr
 800077e:	bf00      	nop
 8000780:	20000058 	.word	0x20000058

08000784 <__libc_init_array>:
 8000784:	b570      	push	{r4, r5, r6, lr}
 8000786:	2600      	movs	r6, #0
 8000788:	4d0c      	ldr	r5, [pc, #48]	; (80007bc <__libc_init_array+0x38>)
 800078a:	4c0d      	ldr	r4, [pc, #52]	; (80007c0 <__libc_init_array+0x3c>)
 800078c:	1b64      	subs	r4, r4, r5
 800078e:	10a4      	asrs	r4, r4, #2
 8000790:	42a6      	cmp	r6, r4
 8000792:	d109      	bne.n	80007a8 <__libc_init_array+0x24>
 8000794:	f000 fa4e 	bl	8000c34 <_init>
 8000798:	2600      	movs	r6, #0
 800079a:	4d0a      	ldr	r5, [pc, #40]	; (80007c4 <__libc_init_array+0x40>)
 800079c:	4c0a      	ldr	r4, [pc, #40]	; (80007c8 <__libc_init_array+0x44>)
 800079e:	1b64      	subs	r4, r4, r5
 80007a0:	10a4      	asrs	r4, r4, #2
 80007a2:	42a6      	cmp	r6, r4
 80007a4:	d105      	bne.n	80007b2 <__libc_init_array+0x2e>
 80007a6:	bd70      	pop	{r4, r5, r6, pc}
 80007a8:	f855 3b04 	ldr.w	r3, [r5], #4
 80007ac:	4798      	blx	r3
 80007ae:	3601      	adds	r6, #1
 80007b0:	e7ee      	b.n	8000790 <__libc_init_array+0xc>
 80007b2:	f855 3b04 	ldr.w	r3, [r5], #4
 80007b6:	4798      	blx	r3
 80007b8:	3601      	adds	r6, #1
 80007ba:	e7f2      	b.n	80007a2 <__libc_init_array+0x1e>
 80007bc:	08000c54 	.word	0x08000c54
 80007c0:	08000c54 	.word	0x08000c54
 80007c4:	08000c54 	.word	0x08000c54
 80007c8:	08000c58 	.word	0x08000c58

080007cc <__retarget_lock_acquire_recursive>:
 80007cc:	4770      	bx	lr

080007ce <__retarget_lock_release_recursive>:
 80007ce:	4770      	bx	lr

080007d0 <_free_r>:
 80007d0:	b538      	push	{r3, r4, r5, lr}
 80007d2:	4605      	mov	r5, r0
 80007d4:	2900      	cmp	r1, #0
 80007d6:	d040      	beq.n	800085a <_free_r+0x8a>
 80007d8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80007dc:	1f0c      	subs	r4, r1, #4
 80007de:	2b00      	cmp	r3, #0
 80007e0:	bfb8      	it	lt
 80007e2:	18e4      	addlt	r4, r4, r3
 80007e4:	f000 f8dc 	bl	80009a0 <__malloc_lock>
 80007e8:	4a1c      	ldr	r2, [pc, #112]	; (800085c <_free_r+0x8c>)
 80007ea:	6813      	ldr	r3, [r2, #0]
 80007ec:	b933      	cbnz	r3, 80007fc <_free_r+0x2c>
 80007ee:	6063      	str	r3, [r4, #4]
 80007f0:	6014      	str	r4, [r2, #0]
 80007f2:	4628      	mov	r0, r5
 80007f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007f8:	f000 b8d8 	b.w	80009ac <__malloc_unlock>
 80007fc:	42a3      	cmp	r3, r4
 80007fe:	d908      	bls.n	8000812 <_free_r+0x42>
 8000800:	6820      	ldr	r0, [r4, #0]
 8000802:	1821      	adds	r1, r4, r0
 8000804:	428b      	cmp	r3, r1
 8000806:	bf01      	itttt	eq
 8000808:	6819      	ldreq	r1, [r3, #0]
 800080a:	685b      	ldreq	r3, [r3, #4]
 800080c:	1809      	addeq	r1, r1, r0
 800080e:	6021      	streq	r1, [r4, #0]
 8000810:	e7ed      	b.n	80007ee <_free_r+0x1e>
 8000812:	461a      	mov	r2, r3
 8000814:	685b      	ldr	r3, [r3, #4]
 8000816:	b10b      	cbz	r3, 800081c <_free_r+0x4c>
 8000818:	42a3      	cmp	r3, r4
 800081a:	d9fa      	bls.n	8000812 <_free_r+0x42>
 800081c:	6811      	ldr	r1, [r2, #0]
 800081e:	1850      	adds	r0, r2, r1
 8000820:	42a0      	cmp	r0, r4
 8000822:	d10b      	bne.n	800083c <_free_r+0x6c>
 8000824:	6820      	ldr	r0, [r4, #0]
 8000826:	4401      	add	r1, r0
 8000828:	1850      	adds	r0, r2, r1
 800082a:	4283      	cmp	r3, r0
 800082c:	6011      	str	r1, [r2, #0]
 800082e:	d1e0      	bne.n	80007f2 <_free_r+0x22>
 8000830:	6818      	ldr	r0, [r3, #0]
 8000832:	685b      	ldr	r3, [r3, #4]
 8000834:	4408      	add	r0, r1
 8000836:	6010      	str	r0, [r2, #0]
 8000838:	6053      	str	r3, [r2, #4]
 800083a:	e7da      	b.n	80007f2 <_free_r+0x22>
 800083c:	d902      	bls.n	8000844 <_free_r+0x74>
 800083e:	230c      	movs	r3, #12
 8000840:	602b      	str	r3, [r5, #0]
 8000842:	e7d6      	b.n	80007f2 <_free_r+0x22>
 8000844:	6820      	ldr	r0, [r4, #0]
 8000846:	1821      	adds	r1, r4, r0
 8000848:	428b      	cmp	r3, r1
 800084a:	bf01      	itttt	eq
 800084c:	6819      	ldreq	r1, [r3, #0]
 800084e:	685b      	ldreq	r3, [r3, #4]
 8000850:	1809      	addeq	r1, r1, r0
 8000852:	6021      	streq	r1, [r4, #0]
 8000854:	6063      	str	r3, [r4, #4]
 8000856:	6054      	str	r4, [r2, #4]
 8000858:	e7cb      	b.n	80007f2 <_free_r+0x22>
 800085a:	bd38      	pop	{r3, r4, r5, pc}
 800085c:	200001c0 	.word	0x200001c0

08000860 <sbrk_aligned>:
 8000860:	b570      	push	{r4, r5, r6, lr}
 8000862:	4e0e      	ldr	r6, [pc, #56]	; (800089c <sbrk_aligned+0x3c>)
 8000864:	460c      	mov	r4, r1
 8000866:	6831      	ldr	r1, [r6, #0]
 8000868:	4605      	mov	r5, r0
 800086a:	b911      	cbnz	r1, 8000872 <sbrk_aligned+0x12>
 800086c:	f000 f9d2 	bl	8000c14 <_sbrk_r>
 8000870:	6030      	str	r0, [r6, #0]
 8000872:	4621      	mov	r1, r4
 8000874:	4628      	mov	r0, r5
 8000876:	f000 f9cd 	bl	8000c14 <_sbrk_r>
 800087a:	1c43      	adds	r3, r0, #1
 800087c:	d00a      	beq.n	8000894 <sbrk_aligned+0x34>
 800087e:	1cc4      	adds	r4, r0, #3
 8000880:	f024 0403 	bic.w	r4, r4, #3
 8000884:	42a0      	cmp	r0, r4
 8000886:	d007      	beq.n	8000898 <sbrk_aligned+0x38>
 8000888:	1a21      	subs	r1, r4, r0
 800088a:	4628      	mov	r0, r5
 800088c:	f000 f9c2 	bl	8000c14 <_sbrk_r>
 8000890:	3001      	adds	r0, #1
 8000892:	d101      	bne.n	8000898 <sbrk_aligned+0x38>
 8000894:	f04f 34ff 	mov.w	r4, #4294967295
 8000898:	4620      	mov	r0, r4
 800089a:	bd70      	pop	{r4, r5, r6, pc}
 800089c:	200001c4 	.word	0x200001c4

080008a0 <_malloc_r>:
 80008a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008a4:	1ccd      	adds	r5, r1, #3
 80008a6:	f025 0503 	bic.w	r5, r5, #3
 80008aa:	3508      	adds	r5, #8
 80008ac:	2d0c      	cmp	r5, #12
 80008ae:	bf38      	it	cc
 80008b0:	250c      	movcc	r5, #12
 80008b2:	2d00      	cmp	r5, #0
 80008b4:	4607      	mov	r7, r0
 80008b6:	db01      	blt.n	80008bc <_malloc_r+0x1c>
 80008b8:	42a9      	cmp	r1, r5
 80008ba:	d905      	bls.n	80008c8 <_malloc_r+0x28>
 80008bc:	230c      	movs	r3, #12
 80008be:	2600      	movs	r6, #0
 80008c0:	603b      	str	r3, [r7, #0]
 80008c2:	4630      	mov	r0, r6
 80008c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80008c8:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800099c <_malloc_r+0xfc>
 80008cc:	f000 f868 	bl	80009a0 <__malloc_lock>
 80008d0:	f8d8 3000 	ldr.w	r3, [r8]
 80008d4:	461c      	mov	r4, r3
 80008d6:	bb5c      	cbnz	r4, 8000930 <_malloc_r+0x90>
 80008d8:	4629      	mov	r1, r5
 80008da:	4638      	mov	r0, r7
 80008dc:	f7ff ffc0 	bl	8000860 <sbrk_aligned>
 80008e0:	1c43      	adds	r3, r0, #1
 80008e2:	4604      	mov	r4, r0
 80008e4:	d155      	bne.n	8000992 <_malloc_r+0xf2>
 80008e6:	f8d8 4000 	ldr.w	r4, [r8]
 80008ea:	4626      	mov	r6, r4
 80008ec:	2e00      	cmp	r6, #0
 80008ee:	d145      	bne.n	800097c <_malloc_r+0xdc>
 80008f0:	2c00      	cmp	r4, #0
 80008f2:	d048      	beq.n	8000986 <_malloc_r+0xe6>
 80008f4:	6823      	ldr	r3, [r4, #0]
 80008f6:	4631      	mov	r1, r6
 80008f8:	4638      	mov	r0, r7
 80008fa:	eb04 0903 	add.w	r9, r4, r3
 80008fe:	f000 f989 	bl	8000c14 <_sbrk_r>
 8000902:	4581      	cmp	r9, r0
 8000904:	d13f      	bne.n	8000986 <_malloc_r+0xe6>
 8000906:	6821      	ldr	r1, [r4, #0]
 8000908:	4638      	mov	r0, r7
 800090a:	1a6d      	subs	r5, r5, r1
 800090c:	4629      	mov	r1, r5
 800090e:	f7ff ffa7 	bl	8000860 <sbrk_aligned>
 8000912:	3001      	adds	r0, #1
 8000914:	d037      	beq.n	8000986 <_malloc_r+0xe6>
 8000916:	6823      	ldr	r3, [r4, #0]
 8000918:	442b      	add	r3, r5
 800091a:	6023      	str	r3, [r4, #0]
 800091c:	f8d8 3000 	ldr.w	r3, [r8]
 8000920:	2b00      	cmp	r3, #0
 8000922:	d038      	beq.n	8000996 <_malloc_r+0xf6>
 8000924:	685a      	ldr	r2, [r3, #4]
 8000926:	42a2      	cmp	r2, r4
 8000928:	d12b      	bne.n	8000982 <_malloc_r+0xe2>
 800092a:	2200      	movs	r2, #0
 800092c:	605a      	str	r2, [r3, #4]
 800092e:	e00f      	b.n	8000950 <_malloc_r+0xb0>
 8000930:	6822      	ldr	r2, [r4, #0]
 8000932:	1b52      	subs	r2, r2, r5
 8000934:	d41f      	bmi.n	8000976 <_malloc_r+0xd6>
 8000936:	2a0b      	cmp	r2, #11
 8000938:	d917      	bls.n	800096a <_malloc_r+0xca>
 800093a:	1961      	adds	r1, r4, r5
 800093c:	42a3      	cmp	r3, r4
 800093e:	6025      	str	r5, [r4, #0]
 8000940:	bf18      	it	ne
 8000942:	6059      	strne	r1, [r3, #4]
 8000944:	6863      	ldr	r3, [r4, #4]
 8000946:	bf08      	it	eq
 8000948:	f8c8 1000 	streq.w	r1, [r8]
 800094c:	5162      	str	r2, [r4, r5]
 800094e:	604b      	str	r3, [r1, #4]
 8000950:	4638      	mov	r0, r7
 8000952:	f104 060b 	add.w	r6, r4, #11
 8000956:	f000 f829 	bl	80009ac <__malloc_unlock>
 800095a:	f026 0607 	bic.w	r6, r6, #7
 800095e:	1d23      	adds	r3, r4, #4
 8000960:	1af2      	subs	r2, r6, r3
 8000962:	d0ae      	beq.n	80008c2 <_malloc_r+0x22>
 8000964:	1b9b      	subs	r3, r3, r6
 8000966:	50a3      	str	r3, [r4, r2]
 8000968:	e7ab      	b.n	80008c2 <_malloc_r+0x22>
 800096a:	42a3      	cmp	r3, r4
 800096c:	6862      	ldr	r2, [r4, #4]
 800096e:	d1dd      	bne.n	800092c <_malloc_r+0x8c>
 8000970:	f8c8 2000 	str.w	r2, [r8]
 8000974:	e7ec      	b.n	8000950 <_malloc_r+0xb0>
 8000976:	4623      	mov	r3, r4
 8000978:	6864      	ldr	r4, [r4, #4]
 800097a:	e7ac      	b.n	80008d6 <_malloc_r+0x36>
 800097c:	4634      	mov	r4, r6
 800097e:	6876      	ldr	r6, [r6, #4]
 8000980:	e7b4      	b.n	80008ec <_malloc_r+0x4c>
 8000982:	4613      	mov	r3, r2
 8000984:	e7cc      	b.n	8000920 <_malloc_r+0x80>
 8000986:	230c      	movs	r3, #12
 8000988:	4638      	mov	r0, r7
 800098a:	603b      	str	r3, [r7, #0]
 800098c:	f000 f80e 	bl	80009ac <__malloc_unlock>
 8000990:	e797      	b.n	80008c2 <_malloc_r+0x22>
 8000992:	6025      	str	r5, [r4, #0]
 8000994:	e7dc      	b.n	8000950 <_malloc_r+0xb0>
 8000996:	605b      	str	r3, [r3, #4]
 8000998:	deff      	udf	#255	; 0xff
 800099a:	bf00      	nop
 800099c:	200001c0 	.word	0x200001c0

080009a0 <__malloc_lock>:
 80009a0:	4801      	ldr	r0, [pc, #4]	; (80009a8 <__malloc_lock+0x8>)
 80009a2:	f7ff bf13 	b.w	80007cc <__retarget_lock_acquire_recursive>
 80009a6:	bf00      	nop
 80009a8:	200001bc 	.word	0x200001bc

080009ac <__malloc_unlock>:
 80009ac:	4801      	ldr	r0, [pc, #4]	; (80009b4 <__malloc_unlock+0x8>)
 80009ae:	f7ff bf0e 	b.w	80007ce <__retarget_lock_release_recursive>
 80009b2:	bf00      	nop
 80009b4:	200001bc 	.word	0x200001bc

080009b8 <__sflush_r>:
 80009b8:	898a      	ldrh	r2, [r1, #12]
 80009ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009bc:	4605      	mov	r5, r0
 80009be:	0710      	lsls	r0, r2, #28
 80009c0:	460c      	mov	r4, r1
 80009c2:	d457      	bmi.n	8000a74 <__sflush_r+0xbc>
 80009c4:	684b      	ldr	r3, [r1, #4]
 80009c6:	2b00      	cmp	r3, #0
 80009c8:	dc04      	bgt.n	80009d4 <__sflush_r+0x1c>
 80009ca:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80009cc:	2b00      	cmp	r3, #0
 80009ce:	dc01      	bgt.n	80009d4 <__sflush_r+0x1c>
 80009d0:	2000      	movs	r0, #0
 80009d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009d4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80009d6:	2e00      	cmp	r6, #0
 80009d8:	d0fa      	beq.n	80009d0 <__sflush_r+0x18>
 80009da:	2300      	movs	r3, #0
 80009dc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80009e0:	682f      	ldr	r7, [r5, #0]
 80009e2:	6a21      	ldr	r1, [r4, #32]
 80009e4:	602b      	str	r3, [r5, #0]
 80009e6:	d032      	beq.n	8000a4e <__sflush_r+0x96>
 80009e8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80009ea:	89a3      	ldrh	r3, [r4, #12]
 80009ec:	075a      	lsls	r2, r3, #29
 80009ee:	d505      	bpl.n	80009fc <__sflush_r+0x44>
 80009f0:	6863      	ldr	r3, [r4, #4]
 80009f2:	1ac0      	subs	r0, r0, r3
 80009f4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80009f6:	b10b      	cbz	r3, 80009fc <__sflush_r+0x44>
 80009f8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80009fa:	1ac0      	subs	r0, r0, r3
 80009fc:	2300      	movs	r3, #0
 80009fe:	4602      	mov	r2, r0
 8000a00:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000a02:	4628      	mov	r0, r5
 8000a04:	6a21      	ldr	r1, [r4, #32]
 8000a06:	47b0      	blx	r6
 8000a08:	1c43      	adds	r3, r0, #1
 8000a0a:	89a3      	ldrh	r3, [r4, #12]
 8000a0c:	d106      	bne.n	8000a1c <__sflush_r+0x64>
 8000a0e:	6829      	ldr	r1, [r5, #0]
 8000a10:	291d      	cmp	r1, #29
 8000a12:	d82b      	bhi.n	8000a6c <__sflush_r+0xb4>
 8000a14:	4a28      	ldr	r2, [pc, #160]	; (8000ab8 <__sflush_r+0x100>)
 8000a16:	410a      	asrs	r2, r1
 8000a18:	07d6      	lsls	r6, r2, #31
 8000a1a:	d427      	bmi.n	8000a6c <__sflush_r+0xb4>
 8000a1c:	2200      	movs	r2, #0
 8000a1e:	6062      	str	r2, [r4, #4]
 8000a20:	6922      	ldr	r2, [r4, #16]
 8000a22:	04d9      	lsls	r1, r3, #19
 8000a24:	6022      	str	r2, [r4, #0]
 8000a26:	d504      	bpl.n	8000a32 <__sflush_r+0x7a>
 8000a28:	1c42      	adds	r2, r0, #1
 8000a2a:	d101      	bne.n	8000a30 <__sflush_r+0x78>
 8000a2c:	682b      	ldr	r3, [r5, #0]
 8000a2e:	b903      	cbnz	r3, 8000a32 <__sflush_r+0x7a>
 8000a30:	6560      	str	r0, [r4, #84]	; 0x54
 8000a32:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000a34:	602f      	str	r7, [r5, #0]
 8000a36:	2900      	cmp	r1, #0
 8000a38:	d0ca      	beq.n	80009d0 <__sflush_r+0x18>
 8000a3a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000a3e:	4299      	cmp	r1, r3
 8000a40:	d002      	beq.n	8000a48 <__sflush_r+0x90>
 8000a42:	4628      	mov	r0, r5
 8000a44:	f7ff fec4 	bl	80007d0 <_free_r>
 8000a48:	2000      	movs	r0, #0
 8000a4a:	6360      	str	r0, [r4, #52]	; 0x34
 8000a4c:	e7c1      	b.n	80009d2 <__sflush_r+0x1a>
 8000a4e:	2301      	movs	r3, #1
 8000a50:	4628      	mov	r0, r5
 8000a52:	47b0      	blx	r6
 8000a54:	1c41      	adds	r1, r0, #1
 8000a56:	d1c8      	bne.n	80009ea <__sflush_r+0x32>
 8000a58:	682b      	ldr	r3, [r5, #0]
 8000a5a:	2b00      	cmp	r3, #0
 8000a5c:	d0c5      	beq.n	80009ea <__sflush_r+0x32>
 8000a5e:	2b1d      	cmp	r3, #29
 8000a60:	d001      	beq.n	8000a66 <__sflush_r+0xae>
 8000a62:	2b16      	cmp	r3, #22
 8000a64:	d101      	bne.n	8000a6a <__sflush_r+0xb2>
 8000a66:	602f      	str	r7, [r5, #0]
 8000a68:	e7b2      	b.n	80009d0 <__sflush_r+0x18>
 8000a6a:	89a3      	ldrh	r3, [r4, #12]
 8000a6c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000a70:	81a3      	strh	r3, [r4, #12]
 8000a72:	e7ae      	b.n	80009d2 <__sflush_r+0x1a>
 8000a74:	690f      	ldr	r7, [r1, #16]
 8000a76:	2f00      	cmp	r7, #0
 8000a78:	d0aa      	beq.n	80009d0 <__sflush_r+0x18>
 8000a7a:	0793      	lsls	r3, r2, #30
 8000a7c:	bf18      	it	ne
 8000a7e:	2300      	movne	r3, #0
 8000a80:	680e      	ldr	r6, [r1, #0]
 8000a82:	bf08      	it	eq
 8000a84:	694b      	ldreq	r3, [r1, #20]
 8000a86:	1bf6      	subs	r6, r6, r7
 8000a88:	600f      	str	r7, [r1, #0]
 8000a8a:	608b      	str	r3, [r1, #8]
 8000a8c:	2e00      	cmp	r6, #0
 8000a8e:	dd9f      	ble.n	80009d0 <__sflush_r+0x18>
 8000a90:	4633      	mov	r3, r6
 8000a92:	463a      	mov	r2, r7
 8000a94:	4628      	mov	r0, r5
 8000a96:	6a21      	ldr	r1, [r4, #32]
 8000a98:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8000a9c:	47e0      	blx	ip
 8000a9e:	2800      	cmp	r0, #0
 8000aa0:	dc06      	bgt.n	8000ab0 <__sflush_r+0xf8>
 8000aa2:	89a3      	ldrh	r3, [r4, #12]
 8000aa4:	f04f 30ff 	mov.w	r0, #4294967295
 8000aa8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000aac:	81a3      	strh	r3, [r4, #12]
 8000aae:	e790      	b.n	80009d2 <__sflush_r+0x1a>
 8000ab0:	4407      	add	r7, r0
 8000ab2:	1a36      	subs	r6, r6, r0
 8000ab4:	e7ea      	b.n	8000a8c <__sflush_r+0xd4>
 8000ab6:	bf00      	nop
 8000ab8:	dfbffffe 	.word	0xdfbffffe

08000abc <_fflush_r>:
 8000abc:	b538      	push	{r3, r4, r5, lr}
 8000abe:	690b      	ldr	r3, [r1, #16]
 8000ac0:	4605      	mov	r5, r0
 8000ac2:	460c      	mov	r4, r1
 8000ac4:	b913      	cbnz	r3, 8000acc <_fflush_r+0x10>
 8000ac6:	2500      	movs	r5, #0
 8000ac8:	4628      	mov	r0, r5
 8000aca:	bd38      	pop	{r3, r4, r5, pc}
 8000acc:	b118      	cbz	r0, 8000ad6 <_fflush_r+0x1a>
 8000ace:	6a03      	ldr	r3, [r0, #32]
 8000ad0:	b90b      	cbnz	r3, 8000ad6 <_fflush_r+0x1a>
 8000ad2:	f7ff fc99 	bl	8000408 <__sinit>
 8000ad6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000ada:	2b00      	cmp	r3, #0
 8000adc:	d0f3      	beq.n	8000ac6 <_fflush_r+0xa>
 8000ade:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000ae0:	07d0      	lsls	r0, r2, #31
 8000ae2:	d404      	bmi.n	8000aee <_fflush_r+0x32>
 8000ae4:	0599      	lsls	r1, r3, #22
 8000ae6:	d402      	bmi.n	8000aee <_fflush_r+0x32>
 8000ae8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000aea:	f7ff fe6f 	bl	80007cc <__retarget_lock_acquire_recursive>
 8000aee:	4628      	mov	r0, r5
 8000af0:	4621      	mov	r1, r4
 8000af2:	f7ff ff61 	bl	80009b8 <__sflush_r>
 8000af6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000af8:	4605      	mov	r5, r0
 8000afa:	07da      	lsls	r2, r3, #31
 8000afc:	d4e4      	bmi.n	8000ac8 <_fflush_r+0xc>
 8000afe:	89a3      	ldrh	r3, [r4, #12]
 8000b00:	059b      	lsls	r3, r3, #22
 8000b02:	d4e1      	bmi.n	8000ac8 <_fflush_r+0xc>
 8000b04:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000b06:	f7ff fe62 	bl	80007ce <__retarget_lock_release_recursive>
 8000b0a:	e7dd      	b.n	8000ac8 <_fflush_r+0xc>

08000b0c <__swhatbuf_r>:
 8000b0c:	b570      	push	{r4, r5, r6, lr}
 8000b0e:	460c      	mov	r4, r1
 8000b10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b14:	4615      	mov	r5, r2
 8000b16:	2900      	cmp	r1, #0
 8000b18:	461e      	mov	r6, r3
 8000b1a:	b096      	sub	sp, #88	; 0x58
 8000b1c:	da0c      	bge.n	8000b38 <__swhatbuf_r+0x2c>
 8000b1e:	89a3      	ldrh	r3, [r4, #12]
 8000b20:	2100      	movs	r1, #0
 8000b22:	f013 0f80 	tst.w	r3, #128	; 0x80
 8000b26:	bf0c      	ite	eq
 8000b28:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8000b2c:	2340      	movne	r3, #64	; 0x40
 8000b2e:	2000      	movs	r0, #0
 8000b30:	6031      	str	r1, [r6, #0]
 8000b32:	602b      	str	r3, [r5, #0]
 8000b34:	b016      	add	sp, #88	; 0x58
 8000b36:	bd70      	pop	{r4, r5, r6, pc}
 8000b38:	466a      	mov	r2, sp
 8000b3a:	f000 f849 	bl	8000bd0 <_fstat_r>
 8000b3e:	2800      	cmp	r0, #0
 8000b40:	dbed      	blt.n	8000b1e <__swhatbuf_r+0x12>
 8000b42:	9901      	ldr	r1, [sp, #4]
 8000b44:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8000b48:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8000b4c:	4259      	negs	r1, r3
 8000b4e:	4159      	adcs	r1, r3
 8000b50:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000b54:	e7eb      	b.n	8000b2e <__swhatbuf_r+0x22>

08000b56 <__smakebuf_r>:
 8000b56:	898b      	ldrh	r3, [r1, #12]
 8000b58:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000b5a:	079d      	lsls	r5, r3, #30
 8000b5c:	4606      	mov	r6, r0
 8000b5e:	460c      	mov	r4, r1
 8000b60:	d507      	bpl.n	8000b72 <__smakebuf_r+0x1c>
 8000b62:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000b66:	6023      	str	r3, [r4, #0]
 8000b68:	6123      	str	r3, [r4, #16]
 8000b6a:	2301      	movs	r3, #1
 8000b6c:	6163      	str	r3, [r4, #20]
 8000b6e:	b002      	add	sp, #8
 8000b70:	bd70      	pop	{r4, r5, r6, pc}
 8000b72:	466a      	mov	r2, sp
 8000b74:	ab01      	add	r3, sp, #4
 8000b76:	f7ff ffc9 	bl	8000b0c <__swhatbuf_r>
 8000b7a:	9900      	ldr	r1, [sp, #0]
 8000b7c:	4605      	mov	r5, r0
 8000b7e:	4630      	mov	r0, r6
 8000b80:	f7ff fe8e 	bl	80008a0 <_malloc_r>
 8000b84:	b948      	cbnz	r0, 8000b9a <__smakebuf_r+0x44>
 8000b86:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b8a:	059a      	lsls	r2, r3, #22
 8000b8c:	d4ef      	bmi.n	8000b6e <__smakebuf_r+0x18>
 8000b8e:	f023 0303 	bic.w	r3, r3, #3
 8000b92:	f043 0302 	orr.w	r3, r3, #2
 8000b96:	81a3      	strh	r3, [r4, #12]
 8000b98:	e7e3      	b.n	8000b62 <__smakebuf_r+0xc>
 8000b9a:	89a3      	ldrh	r3, [r4, #12]
 8000b9c:	6020      	str	r0, [r4, #0]
 8000b9e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000ba2:	81a3      	strh	r3, [r4, #12]
 8000ba4:	9b00      	ldr	r3, [sp, #0]
 8000ba6:	6120      	str	r0, [r4, #16]
 8000ba8:	6163      	str	r3, [r4, #20]
 8000baa:	9b01      	ldr	r3, [sp, #4]
 8000bac:	b15b      	cbz	r3, 8000bc6 <__smakebuf_r+0x70>
 8000bae:	4630      	mov	r0, r6
 8000bb0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000bb4:	f000 f81e 	bl	8000bf4 <_isatty_r>
 8000bb8:	b128      	cbz	r0, 8000bc6 <__smakebuf_r+0x70>
 8000bba:	89a3      	ldrh	r3, [r4, #12]
 8000bbc:	f023 0303 	bic.w	r3, r3, #3
 8000bc0:	f043 0301 	orr.w	r3, r3, #1
 8000bc4:	81a3      	strh	r3, [r4, #12]
 8000bc6:	89a3      	ldrh	r3, [r4, #12]
 8000bc8:	431d      	orrs	r5, r3
 8000bca:	81a5      	strh	r5, [r4, #12]
 8000bcc:	e7cf      	b.n	8000b6e <__smakebuf_r+0x18>
	...

08000bd0 <_fstat_r>:
 8000bd0:	b538      	push	{r3, r4, r5, lr}
 8000bd2:	2300      	movs	r3, #0
 8000bd4:	4d06      	ldr	r5, [pc, #24]	; (8000bf0 <_fstat_r+0x20>)
 8000bd6:	4604      	mov	r4, r0
 8000bd8:	4608      	mov	r0, r1
 8000bda:	4611      	mov	r1, r2
 8000bdc:	602b      	str	r3, [r5, #0]
 8000bde:	f7ff fb13 	bl	8000208 <_fstat>
 8000be2:	1c43      	adds	r3, r0, #1
 8000be4:	d102      	bne.n	8000bec <_fstat_r+0x1c>
 8000be6:	682b      	ldr	r3, [r5, #0]
 8000be8:	b103      	cbz	r3, 8000bec <_fstat_r+0x1c>
 8000bea:	6023      	str	r3, [r4, #0]
 8000bec:	bd38      	pop	{r3, r4, r5, pc}
 8000bee:	bf00      	nop
 8000bf0:	200001b8 	.word	0x200001b8

08000bf4 <_isatty_r>:
 8000bf4:	b538      	push	{r3, r4, r5, lr}
 8000bf6:	2300      	movs	r3, #0
 8000bf8:	4d05      	ldr	r5, [pc, #20]	; (8000c10 <_isatty_r+0x1c>)
 8000bfa:	4604      	mov	r4, r0
 8000bfc:	4608      	mov	r0, r1
 8000bfe:	602b      	str	r3, [r5, #0]
 8000c00:	f7ff fb11 	bl	8000226 <_isatty>
 8000c04:	1c43      	adds	r3, r0, #1
 8000c06:	d102      	bne.n	8000c0e <_isatty_r+0x1a>
 8000c08:	682b      	ldr	r3, [r5, #0]
 8000c0a:	b103      	cbz	r3, 8000c0e <_isatty_r+0x1a>
 8000c0c:	6023      	str	r3, [r4, #0]
 8000c0e:	bd38      	pop	{r3, r4, r5, pc}
 8000c10:	200001b8 	.word	0x200001b8

08000c14 <_sbrk_r>:
 8000c14:	b538      	push	{r3, r4, r5, lr}
 8000c16:	2300      	movs	r3, #0
 8000c18:	4d05      	ldr	r5, [pc, #20]	; (8000c30 <_sbrk_r+0x1c>)
 8000c1a:	4604      	mov	r4, r0
 8000c1c:	4608      	mov	r0, r1
 8000c1e:	602b      	str	r3, [r5, #0]
 8000c20:	f7ff fb18 	bl	8000254 <_sbrk>
 8000c24:	1c43      	adds	r3, r0, #1
 8000c26:	d102      	bne.n	8000c2e <_sbrk_r+0x1a>
 8000c28:	682b      	ldr	r3, [r5, #0]
 8000c2a:	b103      	cbz	r3, 8000c2e <_sbrk_r+0x1a>
 8000c2c:	6023      	str	r3, [r4, #0]
 8000c2e:	bd38      	pop	{r3, r4, r5, pc}
 8000c30:	200001b8 	.word	0x200001b8

08000c34 <_init>:
 8000c34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c36:	bf00      	nop
 8000c38:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000c3a:	bc08      	pop	{r3}
 8000c3c:	469e      	mov	lr, r3
 8000c3e:	4770      	bx	lr

08000c40 <_fini>:
 8000c40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c42:	bf00      	nop
 8000c44:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000c46:	bc08      	pop	{r3}
 8000c48:	469e      	mov	lr, r3
 8000c4a:	4770      	bx	lr
